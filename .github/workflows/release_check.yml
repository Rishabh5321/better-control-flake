name: Update better-control version

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-better-control:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for checking existing PRs

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          nix profile install nixpkgs#nix-prefetch-github nixpkgs#jq

      - name: Get current and latest versions
        id: versions
        run: |
          CURRENT_VERSION=$(grep -oP 'version = "\K[0-9.]+(?=";)' package.nix)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

          LATEST_VERSION=$(curl -s https://api.github.com/repos/quantumvoid0/better-control/releases/latest | jq -r .tag_name)
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

          if [ "$CURRENT_VERSION" = "$LATEST_VERSION" ]; then
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
          else
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          fi

      - name: Update version and hash
        if: ${{ env.UPDATE_NEEDED == 'true' }}
        run: |
          # Update version in package.nix
          sed -i "s/version = \".*\";/version = \"$LATEST_VERSION\";/" package.nix

          # Run nix-prefetch-github and capture all output
          echo "Running: nix-prefetch-github quantumvoid0 better-control --rev $LATEST_VERSION"
          PREFETCH_OUTPUT=$(nix-prefetch-github quantumvoid0 better-control --rev "$LATEST_VERSION" 2>&1)
          echo "Prefetch output:"
          echo "$PREFETCH_OUTPUT"

          # Extract hash from output
          NEW_HASH=$(echo "$PREFETCH_OUTPUT" | jq -r .hash)
          echo "Extracted hash: $NEW_HASH"

          if [ -z "$NEW_HASH" ]; then
            echo "::error::Failed to extract hash from prefetch output"
            exit 1
          fi

          # Update hash in package.nix
          sed -i "s|hash = \".*\";|hash = \"$NEW_HASH\";|" package.nix

      - name: Commit and push changes
        if: ${{ env.UPDATE_NEEDED == 'true' }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH="update-better-control-$LATEST_VERSION"
          git checkout -B "$BRANCH"
          git add package.nix
          git commit -m "Update better-control to $LATEST_VERSION"
          git push -f origin "$BRANCH"

      - name: Create Pull Request
        if: ${{ env.UPDATE_NEEDED == 'true' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { CURRENT_VERSION, LATEST_VERSION } = process.env;
            const branchName = `update-better-control-${LATEST_VERSION}`;
            const title = `Update better-control to ${LATEST_VERSION}`;
            const body = `This PR updates better-control from version ${CURRENT_VERSION} to ${LATEST_VERSION}.`;

            try {
              const { data: pulls } = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                head: `${context.repo.owner}:${branchName}`,
                base: 'main', // Or your main branch name
                state: 'open',
              });

              if (pulls.length > 0) {
                console.log(`Open pull request found for branch ${branchName}. Skipping creation.`);
              } else {
                const { data: pullRequest } = await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  head: branchName,
                  base: 'main', // Or your main branch name
                  title: title,
                  body: body,
                });
                console.log(`Pull request created: ${pullRequest.html_url}`);
              }
            } catch (error) {
              console.error('Failed to create pull request:', error);
            }